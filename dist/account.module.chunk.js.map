{"version":3,"sources":["./src/app/account/account.module.ts","./src/app/account/account.routing.ts","./src/app/account/forgot/forgot.component.html","./src/app/account/forgot/forgot.component.scss","./src/app/account/forgot/forgot.component.ts","./src/app/account/lockscreen/lockscreen.component.html","./src/app/account/lockscreen/lockscreen.component.scss","./src/app/account/lockscreen/lockscreen.component.ts","./src/app/account/signin/signin.component.html","./src/app/account/signin/signin.component.scss","./src/app/account/signin/signin.component.ts","./src/app/account/signup/signup.component.html","./src/app/account/signup/signup.component.scss","./src/app/account/signup/signup.component.ts"],"names":[],"mappings":"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","file":"account.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule, MatCardModule, MatInputModule, MatCheckboxModule, MatButtonModule, MatSnackBarModule } from '@angular/material';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { AccountRoutes } from './account.routing';\nimport { ForgotComponent } from './forgot/forgot.component';\nimport { LockscreenComponent } from './lockscreen/lockscreen.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AccountRoutes),\n    MatIconModule,\n    MatCardModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [\n    ForgotComponent,\n    LockscreenComponent,\n    SigninComponent,\n    SignupComponent\n  ]\n})\n\nexport class AccountModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/account/account.module.ts","import { Routes } from '@angular/router';\nimport { ForgotComponent } from './forgot/forgot.component';\nimport { LockscreenComponent } from './lockscreen/lockscreen.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\n\nexport const AccountRoutes: Routes = [\n  { path: '', children: [\n      { path: 'forgot', component: ForgotComponent, data: { heading: 'Forgot password', css: ''} },\n      { path: 'lockscreen', component: LockscreenComponent, data: { heading: 'Lockscreen', css: '' } },\n      { path: 'signin', component: SigninComponent, data: { heading: 'Signin', css: ''} },\n      { path: 'signup', component: SignupComponent, data: { heading: 'Signup',  css: '' } }\n    ]\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/account/account.routing.ts","module.exports = \"<div class=\\\"session\\\">\\n  <mat-card class=\\\"overflow-hidden\\\">\\n    <div fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\">\\n      <div fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"bg-image bg-image-forgot\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-evenly center\\\" class=\\\"h-100 py-3\\\" >\\n          <div class=\\\"text-xs-center pb-1 mat-text-white\\\">\\n            <!--<div style=\\\"width: 100px;height: 20px;\\\">-->\\n              <!--<svg class=\\\"logo\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" width=\\\"180\\\" height=\\\"40\\\" viewBox=\\\"0 0 180 40\\\">-->\\n                <!--<use xlink:href=\\\"#logo\\\" />-->\\n              <!--</svg>-->\\n            <!--</div>-->\\n            <img src=\\\"assets/images/brand.png\\\" alt=\\\"logo\\\"  width=\\\"50%\\\">\\n            <!--<p class=\\\"mt-xs mb-0\\\"> DEMO <em> <strong class=\\\"text-lg\\\">SAS Intranet</strong></em> @2018</p>-->\\n          </div>\\n        </div>\\n      </div>\\n      <div fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\n        <mat-card-content class=\\\"pa-3\\\">\\n          <h1 class=\\\"mb-0\\\">Recover Password</h1>\\n          <p class=\\\"mat-text-muted text-md mt-0 mb-2\\\">Enter your email and we'll send you instructions on how to reset your password.</p>\\n          <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <div  fxLayout=\\\"column\\\"  fxLayoutAlign=\\\"space-around\\\">\\n              <div class=\\\"pb-1\\\">\\n                <mat-form-field style=\\\"width: 100%\\\">\\n                  <input matInput placeholder=\\\"Email address\\\" type=\\\"email\\\" [formControl]=\\\"form.controls['email']\\\">\\n                  <mat-icon matSuffix>email</mat-icon>\\n                </mat-form-field>\\n                <small *ngIf=\\\"form.controls['email'].hasError('required') && form.controls['email'].touched\\\" class=\\\"mat-text-warn\\\">You must include an email address.</small>\\n                <small *ngIf=\\\"form.controls['email'].errors?.email && form.controls['email'].touched\\\" class=\\\"mat-text-warn\\\">You must include a valid email address.</small>\\n              </div>\\n              <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Login</button>\\n            </div>\\n            <div class=\\\"pt-1 pb-1 text-xs-center\\\">\\n              <a [routerLink]=\\\"['/account/signin']\\\">Access your account</a>&nbsp;&nbsp;&nbsp;&nbsp;\\n              <a [routerLink]=\\\"['/account/signup']\\\">Create a new account</a>\\n            </div>\\n          </form>\\n        </mat-card-content>\\n      </div>\\n    </div>\\n  </mat-card>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/account/forgot/forgot.component.html\n// module id = ./src/app/account/forgot/forgot.component.html\n// module chunks = account.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/account/forgot/forgot.component.scss\n// module id = ./src/app/account/forgot/forgot.component.scss\n// module chunks = account.module","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FormBuilder, FormGroup, Validators, FormControl} from '@angular/forms';\nimport {CustomValidators} from 'ng2-validation';\nimport {fallIn, moveIn} from 'angular-router-animations';\n\n\n@Component({\n  selector: 'app-forgot',\n  templateUrl: './forgot.component.html',\n  styleUrls: ['./forgot.component.scss'],\n  animations: [moveIn(), fallIn()]\n})\nexport class ForgotComponent implements OnInit {\n\n  public form: FormGroup;\n  constructor(\n    private fb: FormBuilder,\n    private router: Router) {}\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: [null, Validators.compose([Validators.required, CustomValidators.email])]\n    });\n  }\n\n  onSubmit() {\n    this.router.navigate(['/session/signin']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/account/forgot/forgot.component.ts","module.exports = \"<div class=\\\"session\\\">\\n  <div class=\\\"lockscreen-wrapper text-xs-center\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n          <div class=\\\"lockscreen-avatar\\\">\\n            <img src=\\\"assets/images/avatar.jpg\\\" class=\\\"radius-round\\\" alt=\\\"user\\\" title=\\\"user\\\"/>\\n          </div>\\n          <p class=\\\"center-block mt-1\\\">David Miller</p>\\n          <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around\\\">\\n            <div class=\\\"pb-1\\\">\\n              <mat-form-field style=\\\"width: 100%\\\">\\n                <input matInput placeholder=\\\"Username\\\" [formControl]=\\\"form.controls['uname']\\\">\\n                <mat-icon matSuffix>lock</mat-icon>\\n              </mat-form-field>\\n              <small *ngIf=\\\"form.controls['uname'].hasError('required') && form.controls['uname'].touched\\\" class=\\\"mat-text-warn\\\">Username is required.</small>\\n            </div>\\n            <div> <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Unlock</button></div>\\n          </div>\\n        </form>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/account/lockscreen/lockscreen.component.html\n// module id = ./src/app/account/lockscreen/lockscreen.component.html\n// module chunks = account.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/account/lockscreen/lockscreen.component.scss\n// module id = ./src/app/account/lockscreen/lockscreen.component.scss\n// module chunks = account.module","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormControl\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-lockscreen',\n  templateUrl: './lockscreen.component.html',\n  styleUrls: ['./lockscreen.component.scss']\n})\nexport class LockscreenComponent implements OnInit {\n\n  public form: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router) {}\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      uname: [null, Validators.compose([Validators.required])]\n    });\n  }\n\n  onSubmit() {\n    this.router.navigate(['/dashboard']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/account/lockscreen/lockscreen.component.ts","module.exports = \"<div class=\\\"session\\\"  [@moveIn]>\\n  <mat-card class=\\\"overflow-hidden\\\">\\n    <div fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\">\\n      <div fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"bg-image bg-image-signin\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-evenly center\\\" class=\\\"h-100 py-3\\\" >\\n          <div class=\\\"text-xs-center pb-1 mat-text-white\\\">\\n            <!--<div style=\\\"width: 100px;height: 20px;\\\">-->\\n              <!--<svg class=\\\"logo\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" width=\\\"180\\\" height=\\\"40\\\" viewBox=\\\"0 0 180 40\\\">-->\\n                <!--<use xlink:href=\\\"#logo\\\" />-->\\n              <!--</svg>-->\\n            <!--</div>-->\\n            <img src=\\\"assets/images/brand.png\\\" alt=\\\"logo\\\"  width=\\\"50%\\\">\\n            <!--<p class=\\\"mt-xs mb-0\\\"> DEMO <em> <strong class=\\\"text-lg\\\">SAS Intranet</strong></em> @2018</p>-->\\n          </div>\\n        </div>\\n      </div>\\n      <div fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\n        <mat-card-content class=\\\"pa-3\\\">\\n          <h1 class=\\\"mb-0\\\">Login</h1>\\n          <p class=\\\"mat-text-muted text-md mt-0 mb-2\\\">Sign in with your app id to continue.</p>\\n          <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around\\\">\\n              <div class=\\\"pb-1\\\">\\n                <mat-form-field style=\\\"width: 100%\\\">\\n                  <input matInput placeholder=\\\"Email address\\\" type=\\\"email\\\" [formControl]=\\\"form.controls['email']\\\">\\n                  <mat-icon matSuffix>email</mat-icon>\\n                </mat-form-field>\\n                <small *ngIf=\\\"form.controls['email'].hasError('required') && form.controls['email'].touched\\\" class=\\\"mat-text-warn\\\">You must include an email address.</small>\\n                <small *ngIf=\\\"form.controls['email'].errors?.email && form.controls['email'].touched\\\" class=\\\"mat-text-warn\\\">You must include a valid email address.</small>\\n              </div>\\n              <div class=\\\"pb-1\\\">\\n                <mat-form-field style=\\\"width: 100%\\\">\\n                  <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" [formControl]=\\\"form.controls['password']\\\">\\n                  <mat-icon matSuffix>lock</mat-icon>\\n                </mat-form-field>\\n                <small *ngIf=\\\"form.controls['password'].hasError('required') && form.controls['password'].touched\\\" class=\\\"mat-text-warn\\\">Password is required.</small>\\n              </div>\\n              <div class=\\\"pb-1\\\">\\n                <mat-checkbox>Stay logged in</mat-checkbox>\\n              </div>\\n              <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Login</button>\\n            </div>\\n            <div class=\\\"pt-1 pb-1 text-xs-center\\\">\\n              <a [routerLink]=\\\"['/account/forgot']\\\">Forgot password?</a>&nbsp;&nbsp;&nbsp;&nbsp;\\n              <a [routerLink]=\\\"['/account/signup']\\\">Sign up for a new account.</a>\\n            </div>\\n          </form>\\n        </mat-card-content>\\n      </div>\\n    </div>\\n  </mat-card>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/account/signin/signin.component.html\n// module id = ./src/app/account/signin/signin.component.html\n// module chunks = account.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/account/signin/signin.component.scss\n// module id = ./src/app/account/signin/signin.component.scss\n// module chunks = account.module","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FormBuilder, FormGroup, Validators, FormControl} from '@angular/forms';\n\nimport {AuthService} from '../auth.service';\nimport { moveIn, fallIn, fadeInOut, growShrink } from 'angular-router-animations';\nimport {MatSnackBar, MatSnackBarConfig, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition} from '@angular/material';\nimport {CustomValidators} from 'ng2-validation';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss'],\n  animations: [moveIn(), fallIn()],\n})\nexport class SigninComponent implements OnInit {\n  horizontalPosition: MatSnackBarHorizontalPosition = 'right';\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  email;\n  uname;\n  password;\n  config;\n  profile: any;\n  public form: FormGroup;\n\n  constructor(private authService: AuthService, private fb: FormBuilder, private router: Router, public snackBar: MatSnackBar) {\n    if (authService.isLoggedIn()) {\n      this.router.navigate(['/social']);\n    }\n    this.config = new MatSnackBarConfig();\n    this.config.verticalPosition = this.verticalPosition;\n    this.config.horizontalPosition = this.horizontalPosition;\n    this.config.duration = 5000;\n\n  }\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: [null, Validators.compose([Validators.required, CustomValidators.email])],\n      password: [null, Validators.compose([Validators.required])]\n    });\n\n  }\n\n  onSubmit() {\n    const postData = {\n      email: this.form.value.email,\n      password: this.form.value.password\n    }\n    console.log('@component postData :: ', JSON.stringify(postData));\n    this.authService.login(postData).subscribe(data => {\n\n      localStorage.setItem('token', JSON.stringify(data));\n      localStorage.setItem('loginToken', data['token']);\n      localStorage.setItem('role', data['role']);\n      localStorage.setItem('avatar', data['avatar']);\n      localStorage.setItem('username', data['name']);\n      localStorage.setItem('email', data['email']);\n      //   localStorage.setItem('mobile', data['profile'].mobile);\n      //   localStorage.setItem('department', data['profile'].department);\n      //   localStorage.setItem('bio', data['profile'].bio);\n      //   localStorage.setItem('status', data['profile'].status);\n      //   localStorage.setItem('position', data['profile'].position);\n      console.log('get tokenFromStorage:: ', localStorage.getItem('token') );\n      // console.log('get role :: ', localStorage.getItem('role') );\n      // console.log('get profile :: ', localStorage.getItem('profile') );\n      // console.log('get image :: ', localStorage.getItem('image') );\n      console.log('get username :: ', localStorage.getItem('username') );\n      console.log('get email :: ', localStorage.getItem('email') );\n      console.log('login token :: ', localStorage.getItem('loginToken') );\n\n        this.snackBar.open('welcome home', '', this.config);\n        this.router.navigate(['/social']);\n      },\n      error => {\n        console.log(`Error Login :: ${JSON.stringify(error)}`);\n        this.snackBar.open(`${error.error['message']}`, '', this.config);\n        this.form.reset();\n      }\n    );\n\n  }\n  getCurrentLogin () {\n    this.authService.getCurrentUser().subscribe(data => {\n      console.log('get current user details >>> ', JSON.stringify(data));\n    }, error => {\n        this.snackBar.open(`${error.error['message']}`, '', this.config);\n      }\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/account/signin/signin.component.ts","module.exports = \"<div class=\\\"session\\\" [@moveIn]>\\n  <mat-card class=\\\"overflow-hidden\\\">\\n    <div fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\">\\n      <div fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"bg-image bg-image-signup\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-evenly center\\\" class=\\\"h-100 py-3\\\" >\\n          <div class=\\\"text-xs-center pb-1 mat-text-white\\\">\\n            <!--<div style=\\\"width: 100px;height: 20px;\\\">-->\\n              <!--<svg class=\\\"logo\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" width=\\\"180\\\" height=\\\"40\\\" viewBox=\\\"0 0 180 40\\\">-->\\n                <!--<use xlink:href=\\\"#logo\\\" />-->\\n              <!--</svg>-->\\n            <!--</div>-->\\n            <img src=\\\"assets/images/brand.png\\\" alt=\\\"logo\\\"  width=\\\"50%\\\">\\n\\n            <!--<p class=\\\"mt-xs mb-0\\\"> DEMO <em> <strong class=\\\"text-lg\\\">SAS Intranet</strong></em> @2018</p>-->\\n          </div>\\n        </div>\\n      </div>\\n      <div fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\n        <mat-card-content class=\\\"pa-3\\\">\\n          <h1 class=\\\"mb-0\\\">Signup</h1>\\n          <p class=\\\"mat-text-muted text-md mt-0 mb-2\\\">Create an app id to continue.</p>\\n          <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <div fxLayout=\\\"column\\\"  fxLayoutAlign=\\\"space-around\\\">\\n              <div class=\\\"pb-1\\\">\\n                <mat-form-field style=\\\"width: 100%\\\">\\n                  <input matInput placeholder=\\\"Username\\\" type=\\\"text\\\" [formControl]=\\\"form.controls['uname']\\\">\\n                  <mat-icon matSuffix>person</mat-icon>\\n                </mat-form-field>\\n                <small *ngIf=\\\"form.controls['uname'].hasError('required') && form.controls['uname'].touched\\\" class=\\\"mat-text-warn\\\">You must include username.</small>\\n              </div>\\n              <div class=\\\"pb-1\\\">\\n                <mat-form-field style=\\\"width: 100%\\\">\\n                  <input matInput placeholder=\\\"Email address\\\" type=\\\"email\\\" [formControl]=\\\"form.controls['email']\\\">\\n                  <mat-icon matSuffix>email</mat-icon>\\n                </mat-form-field>\\n                <small *ngIf=\\\"form.controls['email'].hasError('required') && form.controls['email'].touched\\\" class=\\\"mat-text-warn\\\">You must include an email address.</small>\\n                <small *ngIf=\\\"form.controls['email'].errors?.email && form.controls['email'].touched\\\" class=\\\"mat-text-warn\\\">You must include a valid email address.</small>\\n              </div>\\n              <div class=\\\"pb-1\\\">\\n                <mat-form-field style=\\\"width: 100%\\\">\\n                  <input matInput placeholder=\\\"Phone number\\\" type=\\\"text\\\" [formControl]=\\\"form.controls['phone']\\\">\\n                  <mat-icon matSuffix>phone</mat-icon>\\n                </mat-form-field>\\n                <small *ngIf=\\\"form.controls['phone'].hasError('required') && form.controls['phone'].touched\\\" class=\\\"mat-text-warn\\\">You must include phone number.</small>\\n              </div>\\n              <div class=\\\"pb-1\\\">\\n                <mat-form-field style=\\\"width: 100%\\\">\\n                  <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" [formControl]=\\\"form.controls['password']\\\">\\n                  <mat-icon matSuffix>lock</mat-icon>\\n                </mat-form-field>\\n                <small *ngIf=\\\"form.controls['password'].hasError('required') && form.controls['password'].touched\\\" class=\\\"mat-text-warn\\\">You must include password.</small>\\n              </div>\\n              <div class=\\\"pb-1\\\">\\n                <mat-form-field style=\\\"width: 100%\\\">\\n                  <input matInput placeholder=\\\"Confirm Password\\\" [formControl]=\\\"form.controls['confirmPassword']\\\" type=\\\"password\\\">\\n                  <mat-icon matSuffix>lock</mat-icon>\\n                </mat-form-field>\\n                <small *ngIf=\\\"form.controls['confirmPassword'].hasError('required') && form.controls['confirmPassword'].touched\\\" class=\\\"mat-text-warn\\\">You must include confirm password.</small>\\n                <small *ngIf=\\\"form.controls['confirmPassword'].errors?.equalTo\\\" class=\\\"mat-text-warn\\\">Passwords do not math.</small>\\n              </div><br>\\n              <!--<div class=\\\"pb-1\\\">-->\\n                <!--<mat-checkbox>I have read and agree to the terms of service.</mat-checkbox>-->\\n              <!--</div>-->\\n              <button mat-raised-button color=\\\"primary\\\" class=\\\"btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Create your account</button>\\n            </div>\\n            <div class=\\\"pt-1 pb-1 text-xs-center\\\">\\n              <a [routerLink]=\\\"['/account/forgot']\\\">Forgot password?</a>&nbsp;&nbsp;&nbsp;&nbsp;\\n              <a [routerLink]=\\\"['/account/signin']\\\">Access your account.</a>\\n            </div>\\n          </form>\\n        </mat-card-content>\\n      </div>\\n    </div>\\n  </mat-card>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/account/signup/signup.component.html\n// module id = ./src/app/account/signup/signup.component.html\n// module chunks = account.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/account/signup/signup.component.scss\n// module id = ./src/app/account/signup/signup.component.scss\n// module chunks = account.module","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FormBuilder, FormGroup, Validators, FormControl} from '@angular/forms';\n\nimport {AuthService} from '../auth.service';\nimport {CustomValidators} from 'ng2-validation';\n\nconst password = new FormControl('', Validators.required);\nconst confirmPassword = new FormControl('', CustomValidators.equalTo(password));\nimport { moveIn, fallIn, fadeInOut, growShrink } from 'angular-router-animations';\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss'],\n  animations: [moveIn(), fallIn(), fadeInOut(), growShrink()],\n\n})\nexport class SignupComponent implements OnInit {\n\n  public form: FormGroup;\n\n  constructor(\n    private authService: AuthService,\n    private fb: FormBuilder,\n    private router: Router) {}\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      uname: [null, Validators.compose([Validators.required])],\n      email: [null, Validators.compose([Validators.required, CustomValidators.email])],\n      phone: [null, Validators.compose([Validators.required])],\n      password: password,\n      confirmPassword: confirmPassword\n    });\n  }\n\n    onSubmit() {\n      const postData = {\n        username: this.form.value.uname,\n        email: this.form.value.email,\n        mobile: this.form.value.phone,\n        password: this.form.value.confirmPassword\n      }\n      console.log('@component postData :: ', JSON.stringify(postData));\n      this.authService.signup(postData).subscribe(data => {\n        console.log(`this.data :: ${JSON.stringify(data)}`);\n        this.router.navigate(['/account/signin']);\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/account/signup/signup.component.ts"],"sourceRoot":"webpack:///"}